<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.eddylog.api.controller.PostControllerTest" tests="8" skipped="0" failures="0" errors="0" timestamp="2023-07-02T14:30:22" hostname="JinKyungui-MacBookAir.local" time="0.272">
  <properties/>
  <testcase name="존재하지 않는 게시글 조회" classname="com.eddylog.api.controller.PostControllerTest" time="0.017"/>
  <testcase name="존재하지 않는 게시글 수정" classname="com.eddylog.api.controller.PostControllerTest" time="0.03"/>
  <testcase name="게시글 작성시 제목에 '바보'는 포함될 수 없다." classname="com.eddylog.api.controller.PostControllerTest" time="0.007"/>
  <testcase name="글 작성" classname="com.eddylog.api.controller.PostControllerTest" time="0.114"/>
  <testcase name="글 1개 조회" classname="com.eddylog.api.controller.PostControllerTest" time="0.025"/>
  <testcase name="페이지를 0으로 요청하면 첫 페이지를 가져온다." classname="com.eddylog.api.controller.PostControllerTest" time="0.054"/>
  <testcase name="글 제목 수정" classname="com.eddylog.api.controller.PostControllerTest" time="0.013"/>
  <testcase name="글 삭제" classname="com.eddylog.api.controller.PostControllerTest" time="0.007"/>
  <system-out><![CDATA[2023-07-02T23:30:22.967+09:00  INFO 13901 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.eddylog.api.controller.PostControllerTest]: PostControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-07-02T23:30:22.969+09:00  INFO 13901 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.eddylog.api.EddylogApplication for test class com.eddylog.api.controller.PostControllerTest
2023-07-02T23:30:22.973+09:00  INFO 13901 --- [    Test worker] Spring Security Debugger                 : 

************************************************************

Request received for GET '/posts/1':

org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper@35cf7e98

servletPath:
pathInfo:/posts/1
headers: 
Content-Type: application/json;charset=UTF-8


Security filter chain: [
  DisableEncodeUrlFilter
  WebAsyncManagerIntegrationFilter
  SecurityContextHolderFilter
  HeaderWriterFilter
  LogoutFilter
  EmailPasswordAuthFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  RememberMeAuthenticationFilter
  AnonymousAuthenticationFilter
  ExceptionTranslationFilter
  AuthorizationFilter
]


************************************************************



MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /posts/1
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.eddylog.api.controller.PostController
           Method = com.eddylog.api.controller.PostController#get(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.eddylog.api.exception.PostNotFound

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"code":"404","message":"존재하지 않는 글입니다.","validation":{}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-07-02T23:30:22.996+09:00  INFO 13901 --- [    Test worker] Spring Security Debugger                 : 

************************************************************

Request received for PATCH '/posts/1':

org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper@65f270e7

servletPath:
pathInfo:/posts/1
headers: 
Content-Type: application/json;charset=UTF-8
Content-Length: 43


Security filter chain: [
  DisableEncodeUrlFilter
  WebAsyncManagerIntegrationFilter
  SecurityContextHolderFilter
  HeaderWriterFilter
  LogoutFilter
  EmailPasswordAuthFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  RememberMeAuthenticationFilter
  AnonymousAuthenticationFilter
  ExceptionTranslationFilter
  AuthorizationFilter
]


************************************************************



MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /posts/1
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"43"]
             Body = {"title":"니모","content":"반포자이"}
    Session Attrs = {SPRING_SECURITY_CONTEXT=SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=eddy@naver.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]]}

Handler:
             Type = com.eddylog.api.controller.PostController
           Method = com.eddylog.api.controller.PostController#edit(Long, PostEdit)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.eddylog.api.exception.PostNotFound

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"code":"404","message":"존재하지 않는 글입니다.","validation":{}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-07-02T23:30:23.022+09:00  INFO 13901 --- [    Test worker] Spring Security Debugger                 : 

************************************************************

Request received for POST '/posts':

org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper@7c3b8b26

servletPath:
pathInfo:/posts
headers: 
Content-Type: application/json;charset=UTF-8
Content-Length: 60


Security filter chain: [
  DisableEncodeUrlFilter
  WebAsyncManagerIntegrationFilter
  SecurityContextHolderFilter
  HeaderWriterFilter
  LogoutFilter
  EmailPasswordAuthFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  RememberMeAuthenticationFilter
  AnonymousAuthenticationFilter
  ExceptionTranslationFilter
  AuthorizationFilter
]


************************************************************



MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /posts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"60"]
             Body = {"title":"나는 바보입니다.","content":"반포자이"}
    Session Attrs = {SPRING_SECURITY_CONTEXT=SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=eddy@naver.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]]}

Handler:
             Type = com.eddylog.api.controller.PostController
           Method = com.eddylog.api.controller.PostController#post(PostCreate)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.eddylog.api.exception.InvalidRequest

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"code":"400","message":"잘못된 요청입니다.","validation":{"title":"제목에 바보를 포함할 수 없습니다."}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-07-02T23:30:23.030+09:00  INFO 13901 --- [    Test worker] Spring Security Debugger                 : 

************************************************************

Request received for POST '/posts':

org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper@1a8042a5

servletPath:
pathInfo:/posts
headers: 
Content-Type: application/json;charset=UTF-8
Content-Length: 57


Security filter chain: [
  DisableEncodeUrlFilter
  WebAsyncManagerIntegrationFilter
  SecurityContextHolderFilter
  HeaderWriterFilter
  LogoutFilter
  EmailPasswordAuthFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  RememberMeAuthenticationFilter
  AnonymousAuthenticationFilter
  ExceptionTranslationFilter
  AuthorizationFilter
]


************************************************************



MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /posts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"57"]
             Body = {"title":"제목입니다.","content":"내용입니다."}
    Session Attrs = {SPRING_SECURITY_CONTEXT=SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=eddy@naver.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]]}

Handler:
             Type = com.eddylog.api.controller.PostController
           Method = com.eddylog.api.controller.PostController#post(PostCreate)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-07-02T23:30:23.146+09:00  INFO 13901 --- [    Test worker] Spring Security Debugger                 : 

************************************************************

Request received for GET '/posts/2':

org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper@66c18b9b

servletPath:
pathInfo:/posts/2
headers: 
Content-Type: application/json;charset=UTF-8


Security filter chain: [
  DisableEncodeUrlFilter
  WebAsyncManagerIntegrationFilter
  SecurityContextHolderFilter
  HeaderWriterFilter
  LogoutFilter
  EmailPasswordAuthFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  RememberMeAuthenticationFilter
  AnonymousAuthenticationFilter
  ExceptionTranslationFilter
  AuthorizationFilter
]


************************************************************



MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /posts/2
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.eddylog.api.controller.PostController
           Method = com.eddylog.api.controller.PostController#get(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":2,"title":"1234567890","content":"bar"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-07-02T23:30:23.173+09:00  INFO 13901 --- [    Test worker] Spring Security Debugger                 : 

************************************************************

Request received for GET '/posts?page=0&size=10':

org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper@7b4e5982

servletPath:
pathInfo:/posts
headers: 
Content-Type: application/json;charset=UTF-8


Security filter chain: [
  DisableEncodeUrlFilter
  WebAsyncManagerIntegrationFilter
  SecurityContextHolderFilter
  HeaderWriterFilter
  LogoutFilter
  EmailPasswordAuthFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  RememberMeAuthenticationFilter
  AnonymousAuthenticationFilter
  ExceptionTranslationFilter
  AuthorizationFilter
]


************************************************************



MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /posts
       Parameters = {page=[0], size=[10]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.eddylog.api.controller.PostController
           Method = com.eddylog.api.controller.PostController#getList(PostSearch)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = [{"id":22,"title":"foo19","content":"bar19"},{"id":21,"title":"foo18","content":"bar18"},{"id":20,"title":"foo17","content":"bar17"},{"id":19,"title":"foo16","content":"bar16"},{"id":18,"title":"foo15","content":"bar15"},{"id":17,"title":"foo14","content":"bar14"},{"id":16,"title":"foo13","content":"bar13"},{"id":15,"title":"foo12","content":"bar12"},{"id":14,"title":"foo11","content":"bar11"},{"id":13,"title":"foo10","content":"bar10"}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-07-02T23:30:23.228+09:00  INFO 13901 --- [    Test worker] Spring Security Debugger                 : 

************************************************************

Request received for PATCH '/posts/23':

org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper@4481f9bd

servletPath:
pathInfo:/posts/23
headers: 
Content-Type: application/json;charset=UTF-8
Content-Length: 43


Security filter chain: [
  DisableEncodeUrlFilter
  WebAsyncManagerIntegrationFilter
  SecurityContextHolderFilter
  HeaderWriterFilter
  LogoutFilter
  EmailPasswordAuthFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  RememberMeAuthenticationFilter
  AnonymousAuthenticationFilter
  ExceptionTranslationFilter
  AuthorizationFilter
]


************************************************************



MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /posts/23
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"43"]
             Body = {"title":"니모","content":"반포자이"}
    Session Attrs = {SPRING_SECURITY_CONTEXT=SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=eddy@naver.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]]}

Handler:
             Type = com.eddylog.api.controller.PostController
           Method = com.eddylog.api.controller.PostController#edit(Long, PostEdit)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-07-02T23:30:23.238+09:00  INFO 13901 --- [    Test worker] Spring Security Debugger                 : 

************************************************************

Request received for DELETE '/posts/24':

org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper@f64ce35

servletPath:
pathInfo:/posts/24
headers: 
Content-Type: application/json;charset=UTF-8


Security filter chain: [
  DisableEncodeUrlFilter
  WebAsyncManagerIntegrationFilter
  SecurityContextHolderFilter
  HeaderWriterFilter
  LogoutFilter
  EmailPasswordAuthFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  RememberMeAuthenticationFilter
  AnonymousAuthenticationFilter
  ExceptionTranslationFilter
  AuthorizationFilter
]


************************************************************



MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /posts/24
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=eddy@naver.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]]}

Handler:
             Type = com.eddylog.api.controller.PostController
           Method = com.eddylog.api.controller.PostController#delete(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
